{"version":3,"sources":["components/Author/index.js","components/Footer/index.js","components/Header/index.js","components/References/index.js","Hooks/UseEffect/index.js","Hooks/UseState/index.js","Hooks/UseState/useForm.js","App.js","reportWebVitals.js","index.js"],"names":["Author","className","href","target","Footer","Header","to","References","UseEffect","useState","value1","setValue1","useEffect","console","log","value2","setValue2","value3","setValue3","n","localStorage","getItem","JSON","parse","name","setName","setItem","stringify","type","value","onChange","e","UseState","count","setCount","count1","count2","counts","setCounts","arrCounts","setArrCounts","setValue","initialValues","values","setValues","useForm","password","handleChange","onClick","currentCount","currentCounts","map","element","Math","random","currentArr","parseInt","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65c79641.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaGithub, FaLinkedinIn } from 'react-icons/fa'\r\nimport { SiCodechef } from 'react-icons/si'\r\n\r\nfunction Author() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"Sanjay\">\r\n                <div className=\"Sanjay-title\">\r\n                    Sanjay R. Prajapati\r\n                </div>\r\n                <div className=\"Sanjay-content\">\r\n                    <p>Front-end web developer at DiOlO</p>\r\n                    <p>CSE Undergrad @IIITV</p>\r\n                    <p>HTML5, CSS3, JavaScript, Node.js, ReactJs, MongoDB, Express.js, Sass</p>\r\n                </div>\r\n                <div className=\"Sanjay-social-links\">\r\n                    <a href=\"https://github.com/sanjay270899\" target=\"_\"><div className=\"Sanjay-social-links-items\"><FaGithub /></div></a>\r\n                    <a href=\"https://www.linkedin.com/in/sanjay270899/\" target=\"_\"><div className=\"Sanjay-social-links-items\"><FaLinkedinIn /></div></a>\r\n                    <a href=\"https://www.codechef.com/users/sanjay270899\" target=\"_\"><div className=\"Sanjay-social-links-items\"><SiCodechef /></div></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Author\r\n","import React from 'react'\r\nimport '../../css/footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"Footer\">\r\n            &copy; learn-react-hooks\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Header\">\r\n            <div className=\"Header-l\">\r\n                Learn-React-Hooks\r\n            </div>\r\n            <div className=\"Header-r\">\r\n                <Link to='references'><div className=\"Header-r-items\">References</div></Link>\r\n                <Link to='author'><div className=\"Header-r-items\">Author</div></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction References() {\r\n    return (\r\n        <div className=\"container\">\r\n            <ul>\r\n                <br />\r\n                <div><a href=\"https://reactjs.org/docs/hooks-intro.html\" target=\"_\">Introducing Hooks</a></div>\r\n                <br />\r\n                <div><a href=\"https://youtu.be/f687hBjwFcM\" target=\"_\">YT Tutorial</a></div>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default References\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction UseEffect() {\r\n\r\n    /******************************************************************/\r\n    const [value1, setValue1] = useState('');\r\n    useEffect(() => {\r\n        console.log(\"Component is re-rendered.\");\r\n    });\r\n\r\n    /******************************************************************/\r\n    const [value2, setValue2] = useState('');\r\n    const [value3, setValue3] = useState('');\r\n    useEffect(() => {\r\n        console.log(\"Re-rendered due to value3.\");\r\n    }, [value3]);\r\n\r\n    /******************************************************************/\r\n    useEffect(() => {\r\n        console.log(\"Empty Dependency Array.\");\r\n    }, []);\r\n\r\n    /******************************************************************/\r\n    useEffect(() => {\r\n        console.log(\"Clean Up useEffect.\")\r\n        return () => {\r\n            console.log(\"UseEffect.js component is unmounted.\");\r\n        }\r\n    }, []);\r\n\r\n    /******************************************************************/\r\n    const [name, setName] = useState(() => {\r\n        let n = localStorage.getItem('name');\r\n        if (n) {\r\n            return JSON.parse(n);\r\n        }\r\n        return '';\r\n    });\r\n    useEffect(() => {\r\n        localStorage.setItem('name', JSON.stringify(name));\r\n    }, [name])\r\n\r\n    return (\r\n        <div className=\"useState-Hook container\">\r\n            <center><h1>useEffect Hook</h1></center>\r\n            <a\r\n                className=\"code-link\"\r\n                href=\"https://github.com/sanjay270899/learn-react-hooks/blob/main/src/Hooks/UseEffect/index.js\" target=\"_\"\r\n            >\r\n                Code Link\r\n            </a>\r\n            <i>Note: Initially every useEffect will be executed once.</i>\r\n            <hr />\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Simple useEffect</div>\r\n                <div className=\"box-content\">\r\n                    <p>It will run every time, when the component re-renders.</p>\r\n                    <p>Re-render the component by change the value of value1 in below input box.</p>\r\n                    <p>Value1: <input type=\"text\" name=\"value1\" value={value1} onChange={(e) => setValue1(e.target.value)} /></p>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">useEffect Hook with dependency array</div>\r\n                <div className=\"box-content\">\r\n                    <p>Now if we want that useEffect should not run every time, when the component re-renders,</p>\r\n                    <p>and only runs when a particular state changes then we can pass depedent state in [].</p>\r\n                    <p>Now console will log only when value3 changes.</p>\r\n                    <p>Value2: <input type=\"text\" name=\"value2\" value={value2} onChange={(e) => setValue2(e.target.value)} /></p>\r\n                    <p>Value3: <input type=\"text\" name=\"value3\" value={value3} onChange={(e) => setValue3(e.target.value)} /></p>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">useEffect Hook with empty dependency array</div>\r\n                <div className=\"box-content\">\r\n                    <p>It will run only once, when the component is rendered first time.</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">useEffect Hook with clean up function</div>\r\n                <div className=\"box-content\">\r\n                    <p>If we return a function from useEffect, it will treated as a clean up function.</p>\r\n                    <p>That function will be called when this component is unmouted (closed).</p>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Persist state with useEffect Hook</div>\r\n                <div className=\"box-content\">\r\n                    <p>Value will persist, even after refresh.</p>\r\n                    <p>Name: <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} /></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UseEffect","import React, { useState } from 'react'\r\nimport { useForm } from './useForm';\r\n\r\nfunction UseState() {\r\n\r\n    /******************************************************************/\r\n    const [count, setCount] = useState(0);\r\n    /*\r\n    * useState hook returns an array with two elements inside it.\r\n    * 1st first element is the state, and 2nd element is the functional to update the state.\r\n    * \r\n    * Above command is same as,\r\n    * \r\n    *    var countState = useState(0);\r\n    *    var count = countState[0];\r\n    *    var setCount = countState[1];\r\n    * \r\n    * Updating state,\r\n    * \r\n    *   setCount(c => c + 1)\r\n    *   c will have the current value of the count state.\r\n    *   When count is updated, the component will re-render, and then now state variable will have new value.\r\n    *   This is the recommended way to update state. (Not: setCount(count + 1)).\r\n    *\r\n    */\r\n\r\n    /******************************************************************/\r\n    const [counts, setCounts] = useState({\r\n        count1: 0,\r\n        count2: 0\r\n    });\r\n    /*\r\n     * We can destructure count1 and count2 like,\r\n     *\r\n     *      const [ { count1, count2 }, setCount2 ] = useState({\r\n     *          count1 : 0,\r\n     *          count2 : 0\r\n     *      })\r\n    */\r\n\r\n    /******************************************************************/\r\n    const [arrCounts, setArrCounts] = useState([1, 3, 2]);\r\n    const [value, setValue] = useState(0);\r\n\r\n    /******************************************************************/\r\n    const [values, handleChange] = useForm({ name: '', password: '' })\r\n\r\n    /******************************************************************/\r\n    function expensiveComputation() {\r\n        // some expensive logic\r\n    }\r\n\r\n    const [state, setState] = useState(() => { expensiveComputation() });\r\n\r\n\r\n    return (\r\n        <div className=\"useState-Hook container\">\r\n            <center><h1>useState Hook</h1></center>\r\n            <a\r\n                className=\"code-link\"\r\n                href=\"https://github.com/sanjay270899/learn-react-hooks/blob/main/src/Hooks/UseState/index.js\" target=\"_\"\r\n            >\r\n                Code Link\r\n            </a>\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Simple Integer State</div>\r\n                <div className=\"box-content\">\r\n                    <button\r\n                        onClick={() => setCount(currentCount => currentCount + 1)}\r\n                    >+</button>\r\n                    <div>{count}</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Object State</div>\r\n                <div className=\"box-content\">\r\n                    <button\r\n                        onClick={() => setCounts(currentCounts =>\r\n                            ({ ...currentCounts, count1: currentCounts.count1 + 1 })\r\n                        )}\r\n                    >+</button>\r\n                    &nbsp;<span>{counts.count1}</span><br />\r\n                    <button\r\n                        onClick={() => setCounts(currentCounts =>\r\n                            ({ ...currentCounts, count2: currentCounts.count2 + 1 })\r\n                        )}\r\n                    >+</button>\r\n                    &nbsp;<span>{counts.count2}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Array State</div>\r\n                <div className=\"box-content\">\r\n                    {\r\n                        arrCounts.map(element => (\r\n                            <div key={Math.random()}>{element}</div>\r\n                        ))\r\n                    }\r\n                    <input type=\"number\" value={value}\r\n                        onChange={(e) => setValue(e.target.value)}\r\n                    />\r\n                    <button\r\n                        onClick={() => {\r\n                            setArrCounts(currentArr => [...currentArr, parseInt(value)]);\r\n                            setValue(0);\r\n                        }}\r\n                    >Add New Number</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Custom useState Hook</div>\r\n                <div className=\"box-content\">\r\n                    Name: <input type=\"text\" name=\"name\" value={values.name}\r\n                        onChange={handleChange}\r\n                    /><br />\r\n                    Password: <input type=\"password\" name=\"password\" value={values.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/******************************************************************/}\r\n            <div className=\"box\">\r\n                <div className=\"box-title\">Lazy initital State in useState Hook</div>\r\n                <div className=\"box-content\">\r\n                    <p>The initialState argument is the state used during the initial render. In subsequent renders, it is disregarded.</p>\r\n                    <p>Some time initial state of the useState is calculated with some expensive logic.</p>\r\n                    <p>Now, if we direct call that expensive function, than that expensive function will be called</p>\r\n                    <p>every time when compenents re-renders.</p>\r\n                    <p>If the initial state is the result of an expensive computation,</p>\r\n                    <p>you may provide a function instead, which will be executed only on the initial render.</p>\r\n                    <p>And that function will return initial run.</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UseState\r\n","import { useState } from 'react';\r\n\r\nexport function useForm(initialValues) {\r\n\r\n    const [values, setValues] = useState(initialValues);\r\n\r\n    return [\r\n        values,\r\n        (e) => {\r\n            setValues({\r\n                ...values,\r\n                [e.target.name]: e.target.value\r\n            });\r\n        }\r\n    ];\r\n\r\n};","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport Author from './components/Author';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport References from './components/References';\r\nimport UseEffect from './Hooks/UseEffect';\r\nimport UseState from './Hooks/UseState';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Link to='/'>\r\n          <Header />\r\n        </Link>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <div className=\"Routes container\">\r\n              <div className=\"Routes-title\">Topics</div>\r\n              <Link to='/usestate'><div className=\"Routes-links\">useState</div></Link>\r\n              <Link to='/useeffect'><div className=\"Routes-links\">useEffect</div></Link>\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path='/usestate' exact>\r\n            <UseState />\r\n          </Route>\r\n          <Route path='/useeffect' exact>\r\n            <UseEffect />\r\n          </Route>\r\n          <Route path='/references' exact>\r\n            <References />\r\n          </Route>\r\n          <Route path='/author' exact>\r\n            <Author />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}